name: test

on:
  push:

env:
  BACK_CONTAINER_NAME: shop-back
  FRONT_CONTAINER_NAME: shop-front
  BACK_PORT: 3000
  FRONT_PORT: 5173
  VITE_API_URL: $BACK_CONTAINER_NAME
  DATABASE_URL: file:./dev.db
  JWT_SECRET: ${{secrets.JWT_SECRET}}
  BCRYPT_SALT_ROUNDS: 10


jobs:

  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v3
        with:
          username: nologin
          password: ${{ secrets.SCALEWAY_API_KEY }}
          registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}
      - name: Build backend
        run : |
          docker build -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/$BACK_CONTAINER_NAME --no-cache \
          --build-arg DATABASE_URL=$DATABASE_URL \
          --build-arg JWT_SECRET=$JWT_SECRET \
          --build-arg BCRYPT_SALT_ROUNDS=$BCRYPT_SALT_ROUNDS ./back/
      - name: Push backend
        run: |
          docker push ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/$BACK_CONTAINER_NAME
                 

  stop-backend:
    runs-on: ubuntu-latest
    needs: [ build-backend ]
    steps:
      - name: Stop backend
        run: |
          docker stop $BACK_CONTAINER_NAME || true
          docker rm $BACK_CONTAINER_NAME || true

  deploy-backend:
    runs-on: ubuntu-latest
    needs: [stop-backend]
    steps:
      - uses: docker/login-action@v3
        with:
          username: nologin
          password: ${{ secrets.SCALEWAY_API_KEY }}
          registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}
      - uses: scaleway/action-scw@v0
        with:
          save-config: 'true'
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCALEWAY_API_KEY }}
          default-organization-id: ${{ secrets.SCW_ORGANISATION_ID }}
      - name: Deploy backend
        run: |
          scw registry login
          scw container container create namespace-id=${{ secrets.SCW_NS_ID }} name=$BACK_CONTAINER_NAME registry-image=${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/$BACK_CONTAINER_NAME port=$BACK_PORT: 3000



  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v3
        with:
          username: nologin
          password: ${{ secrets.SCALEWAY_API_KEY }}
          registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}
      - name: Build frontend
        run : |
          docker build -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/$FRONT_CONTAINER_NAME --no-cache \
          --build-arg VITE_API_URL=$VITE_API_URL:$BACK_PORT ./front/.
      - name: Push frontend
        run : |
          docker push ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/$FRONT_CONTAINER_NAME

  stop-frontend:
    runs-on: ubuntu-latest
    needs: [ build-frontend ]
    steps:
      - name: Stop frontend
        run: |
          docker stop $FRONT_CONTAINER_NAME || true
          docker rm $FRONT_CONTAINER_NAME || true

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [stop-frontend]
    steps:
      - uses: docker/login-action@v3
        with:
          username: nologin
          password: ${{ secrets.SCALEWAY_API_KEY }}
          registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}
      - uses: scaleway/action-scw@v0
        with:
          save-config: 'true'
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCALEWAY_API_KEY }}
          default-organization-id: ${{ secrets.SCW_ORGANISATION_ID }}
      - name: Deploy frontend
        run: |
          scw registry login
          echo "scw container container create namespace-id=${{ secrets.SCW_NS_ID }} name=$FRONT_CONTAINER_NAME registry-image=${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/$FRONT_CONTAINER_NAME port="80""
          scw container container create namespace-id=${{ secrets.SCW_NS_ID }} name=$FRONT_CONTAINER_NAME registry-image=${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/$FRONT_CONTAINER_NAME port="80"
